# pylint: disable=invalid-name, multiple-statements, fixme, missing-docstring, bad-indentation
def main():
    from sys import stdout
    n, h, m = map(int, input().split(' '))
    ls, rs, xs = [], [], []
    for _ in range(m):
        l, r, x = map(int, input().split(' '))
        ls.append(l)
        rs.append(r)
        xs.append(x)

    rest = {}
    for i in range(m):
        rest[xs[i]] = [n for n in range(ls[i], rs[i]+1, 1)]

    rest = dict(sorted(rest.items()))
    defs = {}

    for b in range(n):
        for k, v in rest.items():
            if b+1 in v and b+1 not in defs:
                defs[b+1] = int(k)

    ks = []
    for k, v in defs.items():
        ks.append(v)
    while len(ks) < n:
        ks.append(h)

    ret = [x**2 for x in ks]

    w = stdout.write
    w('%d\n' % sum(ret))

main()


"""
Вы планируете строить дома на улице. На улице есть 𝑛 мест, где вы можете построить дома.
Эти места пронумерованы слева направо от 1 до 𝑛.
В каждом месте вы можете построить дом с целочисленной высотой от 0 до ℎ.
В каждом месте, если дом имеет высоту 𝑎, вы получите от него прибыль в размере 𝑎^2 долларов.
Город имеет 𝑚 ограничений. В соответствии с 𝑖-м ограничением, самый высокий дом от 𝑙𝑖 до 𝑟𝑖
(включительно) должен иметь высоту не более 𝑥𝑖.
Вы хотели бы построить дома, чтобы максимизировать свою прибыль.
Определите максимально возможную прибыль.
Входные данные
Первая строка содержит три целых числа 𝑛, ℎ и 𝑚 (1≤𝑛,ℎ,𝑚≤50) — количество мест,
максимальная высота и количество ограничений.
Каждая из следующих 𝑚 содержит три целых числа 𝑙𝑖, 𝑟𝑖 и 𝑥𝑖 (1≤𝑙𝑖≤𝑟𝑖≤𝑛, 0≤𝑥𝑖≤ℎ) — левая и
правая граница (включительно) 𝑖-го ограничения и максимальная возможная высота на этом отрезке.
Выходные данные
Выведите одно целое число — максимальную возможную прибыль."
"""
